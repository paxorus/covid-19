<canvas id="myChart"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.4.1/dist/chart.min.js" integrity="sha256-GMN9UIJeUeOsn/Uq4xDheGItEeSpI5Hcfp/63GclDZk=" crossorigin="anonymous"></script>

<script>
const covidMortalityData = <%- JSON.stringify(data) %>
	.map(row => ({
		x: row.pop_density,
		y: row.covid_deaths / row.total_pop * 100_000,
		...row
	}))
	// .filter(row => row.x < 50 && row.y < 500);
	.filter(row => row.y < 1000);

const movingAveragesData = <%- JSON.stringify(movingAverages) %>;

const data = {
	datasets: [{
		type: "line",
		label: "Republican States (average)",
		data: movingAveragesData.find(row => row.party === "R").movingAverage
			// .filter(row => row.pop_density < 50)
			.map(row => ([row.pop_density, row.mortality_rate])),
		elements: {
			point: {
				radius: 0
			},
			line: {
				borderColor: "rgb(255, 99, 132)",
				borderWidth: 5
			}
		}
	}, {
		type: "line",
		label: "Democratic States (average)",
		data: movingAveragesData.find(row => row.party === "D").movingAverage
			.map(row => ([row.pop_density, row.mortality_rate])),
		elements: {
			point: {
				radius: 0
			},
			line: {
				borderColor: "rgb(99, 132, 255)",
				borderWidth: 5
			}
		}
	}, {
		type: "line",
		label: "Republican States (lower)",
		data: movingAveragesData.find(row => row.party === "R").movingAverage
			.map(row => ([row.pop_density, row.mortality_rate_error_margins[0]])),
		elements: {
			point: {
				radius: 0
			},
			line: {
				borderColor: "green",
				borderWidth: 5
			}
		}
	}, {
		type: "line",
		label: "Democratic States (upper)",
		data: movingAveragesData.find(row => row.party === "D").movingAverage
			.map(row => ([row.pop_density, row.mortality_rate_error_margins[1]])),
		elements: {
			point: {
				radius: 0
			},
			line: {
				borderColor: "black",
				borderWidth: 5
			}
		}
	}, {
		type: "line",
		label: "Swing States (average)",
		data: movingAveragesData.find(row => row.party === "S").movingAverage
			.map(row => ([row.pop_density, row.mortality_rate])),
		elements: {
			point: {
				radius: 0
			},
			line: {
				borderColor: "rgb(132, 99, 255)",
				borderWidth: 5
			}
		}
	}, {
		type: "scatter",
		label: "Republican States",
		data: covidMortalityData.filter(row => row.party === "R"),
		backgroundColor: "rgba(255, 99, 132, 0.5)"
	}, {
		type: "scatter",
		label: "Democratic States",
		data: covidMortalityData.filter(row => row.party === "D"),
		backgroundColor: "rgba(99, 132, 255, 0.5)"
	}, {
		type: "scatter",
		label: "Swing States",
		data: covidMortalityData.filter(row => row.party === "S"),
		backgroundColor: "rgba(132, 99, 255, 0.5)"
	}]
};

const config = {
	data: data,
	options: {
		responsive: true,
		scales: {
			x: {
				title: {
					display: true,
					text: "Population Density (people per square mile)"
				},
				type: "logarithmic",
				// type: "linear",
				position: "bottom"
			},
			y: {
				title: {
					display: true,
					text: "Mortality Rate (deaths per 100K)"
				}
			}
		},
		plugins: {
			title: {
				display: true,
				text: "Covid-19 County Mortality Rate over Population Density"
			},
			tooltip: {
				callbacks: {
					label: (context) => [
						`${context.raw.county} (${context.raw.state}):`,
						`${Math.round(context.raw.pop_density)} people per sq mi,`,
						`${Math.round(context.parsed.y)} deaths / 100K`			
					].join(" ")
				}
			}
		}
	}
};

const ctx = document.getElementById("myChart").getContext("2d");
const myChart = new Chart(ctx, config);
</script>